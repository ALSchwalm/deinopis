{"version":3,"sources":["appbar.js","result.js","results.js","urlsearch.js","textsearch.js","searchtabs.js","searchgrid.js","error.js","App.js","reducers.js","index.js","actions.js"],"names":["TitleBar","state","mobileOpen","handleDrawerToggle","_this","setState","_this2","this","classes","props","iOS","process","browser","test","navigator","userAgent","drawer","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","className","drawerContents","_material_ui_core_FormControl__WEBPACK_IMPORTED_MODULE_23___default","_material_ui_core_InputLabel__WEBPACK_IMPORTED_MODULE_22___default","htmlFor","_material_ui_core_Select__WEBPACK_IMPORTED_MODULE_19___default","value","score","onChange","setScore","input","_material_ui_core_Input__WEBPACK_IMPORTED_MODULE_20___default","name","id","_material_ui_core_MenuItem__WEBPACK_IMPORTED_MODULE_21___default","_material_ui_core_FormHelperText__WEBPACK_IMPORTED_MODULE_18___default","count","setCount","component","_material_ui_core_FormLabel__WEBPACK_IMPORTED_MODULE_24___default","excluded","_material_ui_core_FormGroup__WEBPACK_IMPORTED_MODULE_25___default","map","sub","index","_material_ui_core_FormControlLabel__WEBPACK_IMPORTED_MODULE_16___default","control","_material_ui_core_Checkbox__WEBPACK_IMPORTED_MODULE_17___default","checked","includes","toggleSubreddit","key","label","root","_material_ui_core_AppBar__WEBPACK_IMPORTED_MODULE_8___default","position","appBar","_material_ui_core_Toolbar__WEBPACK_IMPORTED_MODULE_11___default","_material_ui_core_IconButton__WEBPACK_IMPORTED_MODULE_14___default","color","aria-label","onClick","menuButton","_material_ui_icons_Menu__WEBPACK_IMPORTED_MODULE_13___default","_material_ui_core_Typography__WEBPACK_IMPORTED_MODULE_12___default","variant","noWrap","_material_ui_core_Hidden__WEBPACK_IMPORTED_MODULE_15___default","mdUp","implementation","_material_ui_core_SwipeableDrawer__WEBPACK_IMPORTED_MODULE_10___default","disableBackdropTransition","disableDiscovery","open","onOpen","onClose","paper","drawerPaper","smDown","_material_ui_core_Drawer__WEBPACK_IMPORTED_MODULE_9___default","toolbar","React","Component","withStyles","theme","flexGrow","zIndex","width","flexShrink","paddingLeft","paddingTop","content","padding","spacing","unit","Object","_home_adam_repos_deinopis_site_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_5__","marginRight","breakpoints","up","display","mixins","connect","excludedSubreddits","dispatch","parseInt","target","subreddit","author","overflow","textOverflow","data","react_default","Grow_default","in","ListItem_default","button","href","suggestion","Grid_default","container","justify","item","xs","sm","title","Hidden_default","only","Results","nextProps","nextState","loading","heading","_this$props","CircularProgress_default","length","List_default","result","i","src_result","backgroundColor","palette","background","justifyContent","flexWrap","marginTop","KeywordUrlSearch","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","search","bind","assertThisInitialized","onChipClick","onCancel","urlSearched","setUrlSearch","prevProps","urlSearch","setUrlSearched","xhr","XMLHttpRequest","setRequestHeader","isUrl","send","JSON","stringify","url","excluded_subreddits","text","onloadend","e","setLoading","status","resp","parse","responseText","body","suggestions","setError","error","setTextSearched","setTextSearch","examples","_this3","chips","Chip_default","chip","material_ui_search_bar_lib_default","onRequestSearch","onCancelSearch","results","setErrorText","toggleError","margin","TextSearch","handleChange","event","textSearched","textSearch","TextField_default","multiline","rows","fullWidth","placeholder","Button_default","TabContainer","_ref","children","dir","Typography_default","style","SearchTabs","setTab","handleChangeIndex","AppBar_default","Tabs_default","tab","indicatorColor","textColor","Tab_default","lib_default","axis","direction","onChangeIndex","urlsearch","textsearch","number","withTheme","md","searchtabs","ErrorDialog","fullScreen","Dialog_default","errorOpen","closeError","aria-labelledby","DialogTitle_default","DialogContent_default","DialogContentText_default","errorText","DialogActions_default","withMobileDialog","App","appbar","searchgrid","appState","combineReducers","arguments","undefined","action","type","SET_COUNT","SET_SCORE","SET_EXCLUDED","subreddits","TOGGLE_SUBREDDIT","filter","concat","TOGGLE_ERROR","SET_ERROR_TEXT","SET_URL_SEARCH","SET_URL_SEARCHED","SET_TEXT_SEARCH","SET_TEXT_SEARCHED","SET_TAB","SET_LOADING","store","createStore","ReduxQuerySync","params","selector","defaultValue","setExcludedSubreddits","stringToValue","string","valueToString","initialTruth","replaceState","ReactDOM","render","es","src_App","document","getElementById","__webpack_require__","d","__webpack_exports__"],"mappings":"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","file":"static/js/main.47a24e8f.chunk.js","sourcesContent":["import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport SwipeableDrawer from \"@material-ui/core/SwipeableDrawer\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport Select from \"@material-ui/core/Select\";\nimport Input from \"@material-ui/core/Input\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport { connect } from \"react-redux\";\nimport { setScore, setCount, toggleSubreddit } from \"./actions\";\n\nconst drawerWidth = 240;\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0\n  },\n  drawerPaper: {\n    width: drawerWidth\n  },\n  drawerContents: {\n     paddingLeft: 20,\n     paddingTop: 20\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing.unit * 3\n  },\n  menuButton: {\n    marginRight: 20,\n    [theme.breakpoints.up(\"md\")]: {\n      display: \"none\"\n    }\n  },\n  excluded: {\n    paddingTop: 30\n  },\n  toolbar: theme.mixins.toolbar\n});\n\nclass TitleBar extends React.Component {\n  state = {\n    mobileOpen: false\n  };\n\n  handleDrawerToggle = () => {\n    this.setState(state => ({ mobileOpen: !state.mobileOpen }));\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    const iOS = process.browser && /iPad|iPhone|iPod/.test(navigator.userAgent);\n    const subreddits = [\"HFY\", \"nosleep\"];\n    const drawer = (\n      <div className={classes.drawerContents}>\n        <FormControl>\n          <InputLabel htmlFor=\"score-helper\">\n            Min Score\n          </InputLabel>\n          <Select\n            value={this.props.score}\n            onChange={this.props.setScore}\n            input={<Input name=\"score\" id=\"score-helper\" />}\n          >\n            <MenuItem value={50}>50</MenuItem>\n            <MenuItem value={150}>150</MenuItem>\n            <MenuItem value={300}>300</MenuItem>\n            <MenuItem value={500}>500</MenuItem>\n          </Select>\n          <FormHelperText>Minimum score for results</FormHelperText>\n        </FormControl>\n        <FormControl>\n          <InputLabel htmlFor=\"count-helper\">\n            Count\n          </InputLabel>\n          <Select\n            value={this.props.count}\n            onChange={this.props.setCount}\n            input={<Input name=\"count\" id=\"count-helper\" />}\n          >\n            <MenuItem value={10}>10</MenuItem>\n            <MenuItem value={20}>20</MenuItem>\n            <MenuItem value={50}>50</MenuItem>\n            <MenuItem value={100}>100</MenuItem>\n          </Select>\n          <FormHelperText>Number of results to show</FormHelperText>\n        </FormControl>\n\n        <FormControl component=\"fieldset\">\n          <FormLabel component=\"legend\" className={classes.excluded}>\n            Excluded Subreddits\n          </FormLabel>\n          <FormGroup>\n            {subreddits.map((sub, index) => (\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    checked={this.props.excluded.includes(sub)}\n                    onChange={() => this.props.toggleSubreddit(sub)}\n                    value={sub}\n                  />\n                }\n                key={index}\n                label={sub}\n              />\n            ))}\n          </FormGroup>\n        </FormControl>\n      </div>\n    );\n\n    return (\n      <div className={classes.root}>\n        <AppBar position=\"fixed\" className={classes.appBar}>\n          <Toolbar>\n            <IconButton\n              color=\"inherit\"\n              aria-label=\"Open drawer\"\n              onClick={this.handleDrawerToggle}\n              className={classes.menuButton}\n            >\n              <MenuIcon />\n            </IconButton>\n            <Typography variant=\"h6\" color=\"inherit\" noWrap>\n              Deinopis\n            </Typography>\n          </Toolbar>\n        </AppBar>\n        <Hidden mdUp implementation=\"css\">\n          <SwipeableDrawer\n            disableBackdropTransition={!iOS}\n            disableDiscovery={iOS}\n            className={classes.drawer}\n            variant=\"temporary\"\n            open={this.state.mobileOpen}\n            onOpen={this.handleDrawerToggle}\n            onClose={this.handleDrawerToggle}\n            classes={{\n              paper: classes.drawerPaper\n            }}\n          >\n            {drawer}\n          </SwipeableDrawer>\n        </Hidden>\n        <Hidden smDown implementation=\"css\">\n          <Drawer\n            classes={{\n              paper: classes.drawerPaper\n            }}\n            variant=\"permanent\"\n            open\n          >\n            <div className={classes.toolbar} />\n            {drawer}\n          </Drawer>\n        </Hidden>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    score: state.score,\n    count: state.count,\n    excluded: state.excludedSubreddits\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setScore: score => {\n      dispatch(setScore(parseInt(score.target.value)));\n    },\n    setCount: count => {\n      dispatch(setCount(parseInt(count.target.value)));\n    },\n    toggleSubreddit: subreddit => {\n      dispatch(toggleSubreddit(subreddit));\n    }\n  };\n};\n\nexport default withStyles(styles)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(TitleBar)\n);\n","import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport Grow from \"@material-ui/core/Grow\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Hidden from \"@material-ui/core/Hidden\";\n\nconst styles = theme => ({\n    author: {\n        overflow: \"hidden\",\n        textOverflow: \"ellipsis\"\n    }\n});\n\nfunction buildUrl(subreddit, id) {\n  return \"https://reddit.com/r/\" + subreddit + \"/comments/\" + id;\n}\n\nfunction Result(props) {\n  const { data, classes } = props;\n  return (\n    <Grow in={true}>\n      <ListItem\n        button\n        component=\"a\"\n        target=\"_blank\"\n        href={buildUrl(data.suggestion.subreddit, data.suggestion.id)}\n      >\n        <Grid container justify=\"flex-start\">\n          <Grid item xs={2} sm={1}>\n            {data.suggestion.score}\n          </Grid>\n          <Grid item xs={7}>\n            {data.suggestion.title}\n          </Grid>\n          <Hidden only=\"xs\">\n            <Grid item sm={2} className={classes.author}>\n              {data.suggestion.author}\n            </Grid>\n          </Hidden>\n          <Grid item sm={2}>\n            {data.suggestion.subreddit}\n          </Grid>\n        </Grid>\n      </ListItem>\n    </Grow>\n  );\n}\n\nexport default withStyles(styles)(Result);\n","import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport Result from \"./result\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport { connect } from \"react-redux\";\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst styles = theme => ({\n  root: {\n    width: \"100%\",\n    backgroundColor: theme.palette.background.paper\n  },\n  loading: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    flexWrap: \"wrap\",\n    marginTop: 100\n  }\n});\n\nclass Results extends React.Component {\n  shouldComponentUpdate(nextProps, nextState) {\n    if (this.props.data !== nextProps.data ||\n        this.props.loading !== nextProps.loading) {\n      return true;\n    }\n    return false;\n  }\n\n  render() {\n    const { classes, data } = this.props;\n\n      if (this.props.loading) {\n\n          return (\n              <div className={classes.loading}>\n               <CircularProgress />\n              </div>\n          );\n      }\n\n    let heading;\n    if (data.length) {\n      heading = (\n        <ListItem key=\"header\">\n          <Grid container justify=\"flex-start\">\n            <Grid item xs={2} sm={1}>\n              <b>Score</b>\n            </Grid>\n            <Grid item xs={7}>\n              <b>Title</b>\n            </Grid>\n            <Hidden only=\"xs\">\n              <Grid item sm={2}>\n                <b>Author</b>\n              </Grid>\n            </Hidden>\n            <Grid item sm={2}>\n              <b>Subreddit</b>\n            </Grid>\n          </Grid>\n        </ListItem>\n      );\n    } else {\n      heading = null;\n    }\n\n    return (\n      <div className={classes.root}>\n        <List>\n          {heading}\n          {data.map(function(result, i) {\n            return <Result data={result} key={i} />;\n          })}\n        </List>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.loading,\n  };\n};\n\nexport default connect(mapStateToProps)(withStyles(styles)(Results));\n","import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport SearchBar from \"material-ui-search-bar\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Results from \"./results\";\nimport isUrl from \"is-url\";\nimport { connect } from \"react-redux\";\nimport {\n  toggleError,\n  setErrorText,\n  setTextSearch,\n  setTextSearched,\n  setUrlSearch,\n  setUrlSearched,\n  setLoading\n} from \"./actions\";\n\nconst styles = theme => ({\n  results: {\n    marginTop: 20\n  },\n  chips: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    flexWrap: \"wrap\"\n  },\n  chip: {\n    margin: theme.spacing.unit\n  },\n  examples: {\n    marginTop: 40\n  }\n});\n\nclass KeywordUrlSearch extends React.Component {\n  state = {\n    data: []\n  };\n\n  constructor(props) {\n    super(props);\n    this.search = this.search.bind(this);\n    this.onChipClick = this.onChipClick.bind(this);\n    this.onCancel = this.onCancel.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.props.urlSearched) {\n      this.props.setUrlSearch(this.props.urlSearched);\n      this.search(this.props.urlSearched);\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      (this.props.score !== prevProps.score ||\n        this.props.count !== prevProps.count ||\n        this.props.excluded !== prevProps.excluded) &&\n      (typeof this.props.score !== \"undefined\" &&\n        typeof this.props.count !== \"undefined\" &&\n        typeof this.props.excluded !== \"undefined\" &&\n        typeof this.props.urlSearch !== \"undefined\")\n    ) {\n      this.search(this.props.urlSearch);\n    }\n  }\n\n  onChipClick(value) {\n    this.props.setUrlSearch(value);\n    this.search(value);\n  }\n\n  onCancel() {\n    this.props.setUrlSearch(\"\");\n    this.props.setUrlSearched(\"\");\n    this.setState({ data: [] });\n  }\n\n  search(value) {\n    if (value === \"\") {\n      return;\n    }\n\n    var xhr = new XMLHttpRequest();\n    xhr.open(\"POST\", \"https://micro-ec2.alschwalm.com/suggestions\", true);\n    xhr.setRequestHeader(\"Content-Type\", \"application/json; charset=UTF-8\");\n\n    if (!isUrl(value) && isUrl(\"http://\" + value)) {\n      value = \"http://\" + value;\n    }\n    if (isUrl(value)) {\n      xhr.send(\n        JSON.stringify({\n          count: this.props.count,\n          url: value,\n          score: this.props.score,\n          excluded_subreddits: this.props.excluded\n        })\n      );\n    } else {\n      xhr.send(\n        JSON.stringify({\n          count: this.props.count,\n          text: value,\n          score: this.props.score,\n          excluded_subreddits: this.props.excluded\n        })\n      );\n    }\n\n    xhr.onloadend = e => {\n      this.props.setLoading(false);\n      if (xhr.status === 0) {\n        this.props.setError(\"Unable to connect to server\");\n        return;\n      }\n      let resp = JSON.parse(xhr.responseText);\n      let data = resp.body.suggestions;\n      if (!data) {\n        this.props.setError(resp.body.error);\n        return;\n      }\n\n      // Clear the state first so we get the animation\n      this.setState({ data: [] });\n      this.setState({ data: data });\n    };\n\n    this.props.setLoading(true);\n    this.props.setUrlSearched(value);\n    this.props.setTextSearched(\"\");\n    this.props.setTextSearch(\"\");\n  }\n\n  render() {\n    const { classes } = this.props;\n\n    let examples;\n    if (!this.state.data.length || !this.props.urlSearched) {\n      let labels = [\n        \"space cat\",\n        \"reddit.com/r/nosleep/comments/7txais\",\n        \"elf\",\n        \"cursed cave\",\n        \"reddit.com/r/HFY/comments/5tcesp\",\n        \"reddit.com/r/HFY/comments/2it95v\"\n      ];\n\n      examples = (\n        <div className={classes.examples}>\n            <p>Can&#39;t think of anything? Try one of these examples:</p>\n          <div className={classes.chips}>\n            {labels.map((label, i) => {\n              return (\n                <Chip\n                  label={label}\n                  key={i}\n                  className={classes.chip}\n                  onClick={() => this.onChipClick(label)}\n                />\n              );\n            })}\n          </div>\n        </div>\n      );\n    } else {\n      examples = null;\n    }\n\n    return (\n      <div>\n        <SearchBar\n          onChange={this.props.setUrlSearch}\n          onRequestSearch={this.search}\n          onCancelSearch={this.onCancel}\n          value={this.props.urlSearch}\n        />\n        {examples}\n        <div className={classes.results}>\n          {this.props.urlSearched && <Results data={this.state.data} />}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    score: state.score,\n    count: state.count,\n    excluded: state.excludedSubreddits,\n    urlSearch: state.urlSearch,\n    urlSearched: state.urlSearched\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setError: text => {\n      dispatch(setErrorText(text));\n      dispatch(toggleError());\n    },\n    setUrlSearched: text => {\n      dispatch(setUrlSearched(text));\n    },\n    setUrlSearch: text => {\n      dispatch(setUrlSearch(text));\n    },\n    setTextSearched: text => {\n      dispatch(setTextSearched(text));\n    },\n    setTextSearch: text => {\n      dispatch(setTextSearch(text));\n    },\n    setLoading: loading => {\n      dispatch(setLoading(loading))\n    }\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withStyles(styles)(KeywordUrlSearch));\n","import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Results from \"./results\";\nimport { connect } from \"react-redux\";\nimport {\n  toggleError,\n  setErrorText,\n  setTextSearch,\n  setTextSearched,\n  setUrlSearch,\n  setUrlSearched,\n  setLoading\n} from \"./actions\";\n\nconst styles = {\n  button: {\n    marginTop: 20\n  }\n};\n\nclass TextSearch extends React.Component {\n  state = {\n    data: []\n  };\n\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n    this.search = this.search.bind(this);\n  }\n\n  handleChange(event) {\n    this.props.setTextSearch(event.target.value);\n  }\n\n  componentDidMount() {\n    if (this.props.textSearched) {\n      this.props.setTextSearch(this.props.textSearched);\n      this.search(this.props.textSearched);\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      (this.props.score !== prevProps.score ||\n        this.props.count !== prevProps.count ||\n        this.props.excluded !== prevProps.excluded) &&\n      (typeof this.props.score !== \"undefined\" &&\n        typeof this.props.count !== \"undefined\" &&\n        typeof this.props.excluded !== \"undefined\" &&\n        typeof this.props.textSearch !== \"undefined\")\n    ) {\n      this.search(this.props.textSearch);\n    }\n  }\n\n  search(value) {\n    if (value === \"\") {\n      return;\n    }\n\n    var xhr = new XMLHttpRequest();\n    xhr.open(\"POST\", \"https://micro-ec2.alschwalm.com/suggestions\", true);\n    xhr.setRequestHeader(\"Content-Type\", \"application/json; charset=UTF-8\");\n\n    xhr.send(\n      JSON.stringify({\n        count: this.props.count,\n        score: this.props.score,\n        text: value,\n        excluded_subreddits: this.props.excluded\n      })\n    );\n\n    xhr.onloadend = e => {\n      this.props.setLoading(false);\n      if (xhr.status === 0) {\n        this.props.setError(\"Unable to connect to server\");\n        return;\n      }\n      let resp = JSON.parse(xhr.responseText);\n      let data = resp.body.suggestions;\n      if (!data) {\n        this.props.setError(resp.body.error);\n        return;\n      }\n\n      // Clear the state first so we get the animation\n      this.setState({ data: [] });\n      this.setState({ data: data });\n    };\n\n    this.props.setLoading(true);\n    this.props.setTextSearched(value);\n    this.props.setUrlSearched(\"\");\n    this.props.setUrlSearch(\"\");\n  }\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <div>\n        <div>\n          <TextField\n            multiline\n            rows=\"12\"\n            fullWidth\n            variant=\"outlined\"\n            placeholder=\"Enter your search text here\"\n            onChange={this.handleChange}\n            value={this.props.textSearch}\n          />\n        </div>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.button}\n          onClick={() => this.search(this.props.textSearch)}\n        >\n          Search\n        </Button>\n        {this.props.textSearched && <Results data={this.state.data} />}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    score: state.score,\n    count: state.count,\n    excluded: state.excludedSubreddits,\n    textSearch: state.textSearch,\n    textSearched: state.textSearched\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setError: text => {\n      dispatch(setErrorText(text));\n      dispatch(toggleError());\n    },\n    setTextSearched: text => {\n      dispatch(setTextSearched(text));\n    },\n    setTextSearch: text => {\n      dispatch(setTextSearch(text));\n    },\n    setUrlSearched: text => {\n      dispatch(setUrlSearched(text));\n    },\n    setUrlSearch: text => {\n      dispatch(setUrlSearch(text));\n    },\n    setLoading: loading => {\n      dispatch(setLoading(loading))\n    }\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withStyles(styles)(TextSearch));\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport SwipeableViews from \"react-swipeable-views\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Typography from \"@material-ui/core/Typography\";\nimport KeywordUrlSearch from \"./urlsearch\";\nimport TextSearch from \"./textsearch\";\nimport { connect } from \"react-redux\";\nimport { setTab } from \"./actions\";\n\nfunction TabContainer({ children, dir }) {\n  return (\n    <Typography component=\"div\" dir={dir} style={{ padding: 8 * 3 }}>\n      {children}\n    </Typography>\n  );\n}\n\nTabContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n  dir: PropTypes.string.isRequired\n};\n\nconst styles = theme => ({});\n\nclass SearchTabs extends React.Component {\n  handleChange = (event, value) => {\n    this.props.setTab(value);\n  };\n\n  handleChangeIndex = index => {\n    this.props.setTab(index);\n  };\n\n\n  render() {\n    const { theme } = this.props;\n\n    return (\n      <div>\n        <AppBar position=\"static\" color=\"default\">\n          <Tabs\n            value={this.props.tab}\n            onChange={this.handleChange}\n            indicatorColor=\"primary\"\n            textColor=\"primary\"\n            fullWidth\n          >\n            <Tab label=\"Keyword or URL\" />\n            <Tab label=\"Text\" />\n          </Tabs>\n        </AppBar>\n        <SwipeableViews\n          axis={theme.direction === \"rtl\" ? \"x-reverse\" : \"x\"}\n          index={this.props.tab}\n          onChangeIndex={this.handleChangeIndex}\n        >\n          <TabContainer dir={theme.direction}>\n            <KeywordUrlSearch />\n          </TabContainer>\n          <TabContainer dir={theme.direction}>\n            <TextSearch />\n          </TabContainer>\n        </SwipeableViews>\n      </div>\n    );\n  }\n}\n\nSearchTabs.propTypes = {\n  classes: PropTypes.object.isRequired,\n  theme: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => {\n  return {\n    tab: state.tab\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setTab: number => {\n      dispatch(setTab(number));\n    }\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withStyles(styles, { withTheme: true })(SearchTabs));\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport SearchTabs from \"./searchtabs.js\";\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n    marginTop: 20\n  },\n  toolbar: theme.mixins.toolbar\n});\n\nfunction FullWidthGrid(props) {\n  const { classes } = props;\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.toolbar} />\n      <Grid container justify=\"center\">\n        <Grid item xs={12} sm={12} md={6}>\n          <SearchTabs />\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nFullWidthGrid.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(FullWidthGrid);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport withMobileDialog from \"@material-ui/core/withMobileDialog\";\nimport { connect } from \"react-redux\";\nimport { toggleError } from \"./actions\";\n\nclass ErrorDialog extends React.Component {\n  render() {\n    const { fullScreen } = this.props;\n\n    return (\n      <div>\n        <Dialog\n          fullScreen={fullScreen}\n          open={this.props.errorOpen}\n          onClose={this.props.closeError}\n          aria-labelledby=\"responsive-dialog-title\"\n        >\n          <DialogTitle id=\"responsive-dialog-title\">{\"Error\"}</DialogTitle>\n          <DialogContent>\n            <DialogContentText>{this.props.errorText}</DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={this.props.closeError} color=\"primary\">\n              Close\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    );\n  }\n}\n\nErrorDialog.propTypes = {\n  fullScreen: PropTypes.bool.isRequired\n};\n\nconst mapStateToProps = state => {\n  return {\n    errorOpen: state.errorOpen,\n    errorText: state.errorText\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    closeError: () => {\n      dispatch(toggleError());\n    }\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withMobileDialog()(ErrorDialog));\n","import React, { Component } from \"react\";\nimport TitleBar from \"./appbar\";\nimport SearchGrid from \"./searchgrid\";\nimport ErrorDialog from \"./error\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <ErrorDialog />\n          <TitleBar />\n        </header>\n        <SearchGrid />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import { combineReducers } from \"redux\";\nimport {\n  SET_COUNT,\n  SET_SCORE,\n  TOGGLE_SUBREDDIT,\n  TOGGLE_ERROR,\n  SET_ERROR_TEXT,\n  SET_EXCLUDED,\n  SET_URL_SEARCH,\n  SET_URL_SEARCHED,\n  SET_TEXT_SEARCH,\n  SET_TEXT_SEARCHED,\n  SET_TAB,\n  SET_LOADING\n} from \"./actions\";\n\nfunction score(state = 150, action) {\n  switch (action.type) {\n    case SET_SCORE:\n      return action.score;\n    default:\n      return state;\n  }\n}\n\nfunction count(state = 10, action) {\n  switch (action.type) {\n    case SET_COUNT:\n      return action.count;\n    default:\n      return state;\n  }\n}\n\nfunction errorOpen(state = false, action) {\n  switch (action.type) {\n    case TOGGLE_ERROR:\n      return !state;\n    default:\n      return state;\n  }\n}\n\nfunction errorText(state = \"\", action) {\n  switch (action.type) {\n    case SET_ERROR_TEXT:\n      return action.text;\n    default:\n      return state;\n  }\n}\n\nfunction urlSearched(state = \"\", action) {\n  switch (action.type) {\n    case SET_URL_SEARCHED:\n      return action.text;\n    default:\n      return state;\n  }\n}\n\nfunction urlSearch(state = \"\", action) {\n  switch (action.type) {\n    case SET_URL_SEARCH:\n      return action.text;\n    default:\n      return state;\n  }\n}\n\nfunction textSearched(state = \"\", action) {\n  switch (action.type) {\n    case SET_TEXT_SEARCHED:\n      return action.text;\n    default:\n      return state;\n  }\n}\n\nfunction textSearch(state = \"\", action) {\n  switch (action.type) {\n    case SET_TEXT_SEARCH:\n      return action.text;\n    default:\n      return state;\n  }\n}\n\nfunction tab(state = 0, action) {\n  switch (action.type) {\n    case SET_TAB:\n      return action.number;\n    default:\n      return state;\n  }\n}\n\nfunction loading(state = false, action) {\n  switch (action.type) {\n    case SET_LOADING:\n      return action.loading;\n    default:\n      return state;\n  }\n}\n\nfunction excludedSubreddits(state = [], action) {\n  switch (action.type) {\n    case SET_EXCLUDED:\n      return action.subreddits;\n    case TOGGLE_SUBREDDIT:\n      if (state.includes(action.subreddit)) {\n        state = state.filter(item => item !== action.subreddit);\n      } else {\n        state = state.concat(action.subreddit);\n      }\n      return state;\n    default:\n      return state;\n  }\n}\n\nconst appState = combineReducers({\n  count,\n  score,\n  excludedSubreddits,\n  errorOpen,\n  errorText,\n  urlSearch,\n  urlSearched,\n  textSearch,\n  textSearched,\n  tab,\n  loading\n});\n\nexport default appState;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport appState from \"./reducers\";\nimport {\n  setCount,\n  setScore,\n  setExcludedSubreddits,\n  setUrlSearched,\n  setTextSearched,\n  setTab\n} from \"./actions\";\nimport ReduxQuerySync from \"redux-query-sync\";\n\nconst store = createStore(appState);\n\nReduxQuerySync({\n  store,\n  params: {\n    count: {\n      selector: state => state.count,\n      action: value => setCount(value),\n      defaultValue: 10\n    },\n    score: {\n      selector: state => state.score,\n      action: value => setScore(value),\n      defaultValue: 150\n    },\n    urlSearch: {\n      selector: state => state.urlSearched,\n      action: value => setUrlSearched(value),\n      defaultValue: \"\"\n    },\n    textSearch: {\n      selector: state => state.textSearched,\n      action: value => setTextSearched(value),\n      defaultValue: \"\"\n    },\n    excludedSubreddits: {\n        selector: state => JSON.stringify(state.excludedSubreddits),\n        action: value => setExcludedSubreddits(JSON.parse(value)),\n        defaultValue: JSON.stringify([]),\n    },\n    tab: {\n      selector: state => state.tab,\n      action: value => setTab(value),\n      stringToValue: string => JSON.parse(string),\n      valueToString: value => JSON.stringify(value),\n      defaultValue: 0\n    }\n  },\n  initialTruth: \"location\",\n  replaceState: true\n});\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n","export const SET_COUNT = \"SET_COUNT\";\nexport const SET_SCORE = \"SET_SCORE\";\nexport const TOGGLE_SUBREDDIT = \"TOGGLE_SUBREDDIT\";\nexport const SET_EXCLUDED = \"SET_EXCLUDED\";\nexport const TOGGLE_ERROR = \"TOGGLE_ERROR\";\nexport const SET_ERROR_TEXT = \"SET_ERROR_TEXT\";\nexport const SET_URL_SEARCH = \"SET_URL_SEARCH\";\nexport const SET_URL_SEARCHED = \"SET_URL_SEARCHED\";\nexport const SET_TEXT_SEARCH = \"SET_TEXT_SEARCH\";\nexport const SET_TEXT_SEARCHED = \"SET_TEXT_SEARCHED\";\nexport const SET_TAB = \"SET_TAB\";\nexport const SET_LOADING = \"SET_LOADING\";\n\nexport function setScore(score) {\n  return { type: SET_SCORE, score };\n}\n\nexport function setCount(count) {\n  return { type: SET_COUNT, count };\n}\n\nexport function toggleSubreddit(subreddit) {\n  return { type: TOGGLE_SUBREDDIT, subreddit };\n}\n\nexport function setExcludedSubreddits(subreddits) {\n  return { type: SET_EXCLUDED, subreddits };\n}\n\nexport function toggleError() {\n  return { type: TOGGLE_ERROR };\n}\n\nexport function setErrorText(text) {\n  return { type: SET_ERROR_TEXT, text };\n}\n\nexport function setUrlSearch(text) {\n  return { type: SET_URL_SEARCH, text };\n}\n\nexport function setUrlSearched(text) {\n  return { type: SET_URL_SEARCHED, text };\n}\n\nexport function setTextSearch(text) {\n  return { type: SET_TEXT_SEARCH, text };\n}\n\nexport function setTextSearched(text) {\n  return { type: SET_TEXT_SEARCHED, text };\n}\n\nexport function setTab(number) {\n  return { type: SET_TAB, number };\n}\n\nexport function setLoading(loading) {\n  return { type: SET_LOADING, loading };\n}\n"],"sourceRoot":""}